char** divideString(char* s, int k, char fill, int* returnSize) {
    char** ret = malloc(sizeof(char*) * 200);
    *returnSize = 0;
    int n = strlen(s);
    int m = 0;
    while ((m + k)<= n) {
        ret[*returnSize] = (char*)malloc(sizeof(char) * (k + 1));
        int flag = 0;
        for (int i = m; i < m + k; i++) {
            ret[*returnSize][flag++] = s[i];
        }
        ret[*returnSize][flag] = '\0';
        (*returnSize)++;
        m += k;
    }
    if (m < n) {
        int flag = 0;
        ret[*returnSize] = (char*)malloc(sizeof(char) * (k + 1));
        for(int i=m;i<n;i++)
        {
            ret[*returnSize][flag++]=s[i];
        }
        int tmp = k - flag;
        for (int i = 0; i < tmp; i++) {
            ret[*returnSize][flag++] = fill;
        }
        ret[(*returnSize)++][flag] = '\0';
    }
    return ret;
}