void Swap(int* p1,int* p2)
{
    int tmp=*p1;
    *p1=*p2;
    *p2=tmp;
}
struct ListNode* reverseEvenLengthGroups(struct ListNode* head) {
    int ret[100000];
    struct ListNode* cur=head;
    int n=0;
    while(cur)
    {
        ret[n++]=cur->val;
        cur=cur->next;
    }
    int m=0,flag=1;
    while(m+flag<n)
    {
        if(flag%2==0)
        {
            int left=m;
            int right=m+flag-1;
            while(left<right)
            {
                Swap(&ret[left],&ret[right]);
                left++;
                right--;
            }
        }
        m+=flag;
        flag++;
    }
    if(m<n)
    {
        if((n-m)%2==0)
        {
            int left=m;
            int right=n-1;
            while(left<right)
            {
                Swap(&ret[left],&ret[right]);
                left++;
                right--;
            }
        }
    }
    cur=head;
    int i=0;
    while(cur)
    {
        cur->val=ret[i++];
        cur=cur->next;
    }
    return head;
}