bool reverse(char* s, int left, int right) {
    if (left > right) {
        return false;
    }
    while (left < right) {
        if (s[left] != s[right]) {
            return false;
        }
        left++;
        right--;
    }
    return true;
}
char* longestPalindrome(char* s) {
    int n = strlen(s);
    int max = 0;
    char* ret = (char*)malloc(sizeof(char) * 1001);
    for (int i = 0; i < n; i++) {
        for (int j = n - 1; j >= 0; j--) {
            if (reverse(s, i, j)) {
                if (j - i + 1 > max) {
                    max = j - i + 1;
                    int m = 0;
                    for (int k = i; k <= j; k++) {
                        ret[m++] = s[k];
                    }
                }
                break;
            }
        }
    }
    ret[max] = '\0';
    return ret;
}