int* nodesBetweenCriticalPoints(struct ListNode* head, int* returnSize) {
    int* tmp=(int*)malloc(sizeof(int)*100000);
    int* ret=(int*)malloc(sizeof(int)*2);
    int n=0;
    struct ListNode* cur=head->next;
    int flag1=head->val;
    int flag2=0;
    int m=0;
    while(cur->next)
    {
        flag2=cur->next->val;
        if(cur->val>flag1&&cur->val>flag2)
        {
            tmp[n++]=m;
        }
        if(cur->val<flag1&&cur->val<flag2)
        {
            tmp[n++]=m;
        }
        flag1=cur->val;
        cur=cur->next;
        m++;
    }
    if(n<2)
    {
        ret[0]=-1;
        ret[1]=-1;
    }
    else
    {
        ret[1]=tmp[n-1]-tmp[0];
        int min=100000;
        for(int i=0;i<n-1;i++)
        {
            if(tmp[i+1]-tmp[i]<min)
            {
                min=tmp[i+1]-tmp[i];
            }
        }
        ret[0]=min;
    }
    *returnSize=2;
    return ret;
}