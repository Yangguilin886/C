int compare(const void* p1,const void* p2)
{
    if(*(long long*)p2-*(long long*)p1>0)
    {
        return 1;
    }
    if(*(long long*)p2-*(long long*)p1<0)
    {
        return -1;
    }
    return 0;
}
long long kthLargestLevelSum(struct TreeNode* root, int k) {
    struct TreeNode* queue[100000];
    int head=0,tail=0;
    queue[tail++]=root;
    int n=0;
    long long ret[100000];
    while(head!=tail)
    {
        long long flag=0;
        int start=head;
        head=tail;
        for(int i=start;i<head;i++)
        {
            flag=flag+(long long)queue[i]->val;
            if(queue[i]->left)
            {
                queue[tail++]=queue[i]->left;
            }
            if(queue[i]->right)
            {
                queue[tail++]=queue[i]->right;
            }
        }
        ret[n++]=flag;
    }
    if(k>n)
    {
        return -1;
    }
    qsort(ret,n,sizeof(long long),compare);
    return ret[k-1];
}