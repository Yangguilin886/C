#include <stdio.h>
void Swap(int* p1, int* p2)
{
	int tmp = *p1;
	*p1 = *p2;
	*p2 = tmp;
}
void AdjustUp(int* a, int child)
{
	int parent = (child - 1) / 2;
	while (child > 0)
	{
		if (a[child] < a[parent])
		{
			Swap(&a[child], &a[parent]);
			child = parent;
			parent = (child - 1) / 2;
		}
		else
		{
			break;
		}
	}
}
void AdjustDown(int* a, int n, int parent)
{
	int child = parent * 2 + 1;
	while (child < n)
	{
		if (a[child + 1] < a[child]&&(child+1<n))
		{
			child++;
		}
		if (a[parent] > a[child])
		{
			Swap(&a[parent], &a[child]);
			parent = child;
			child = parent * 2 + 1;
		}
		else
		{
			break;
		}
	}
}
int main()
{
	int a[10] = { 5,7,8,6,3,1,0,2,9,4 };
	for (int i = 0; i < 10; i++)
	{
		AdjustUp(a, i);
	}
	int end = 9;
	for (int i = 0; i < 10; i++)
	{
		Swap(&a[0], &a[end]);
		AdjustDown(a, end, 0);
		end--;
	}
	for (int i = 0; i < 10; i++)
	{
		printf("%d ", a[i]);
	}
}
//方法二
int main()
{
	int a[10] = { 5,7,8,6,3,1,0,2,9,4 };
	for (int i = (9-1)/2; i>=0; i--)
	{
		AdjustDown(a, 9, i);
	}
	int end = 9;
	for (int i = 0; i < 10; i++)
	{
		Swap(&a[0], &a[end]);
		AdjustDown(a, end, 0);
		end--;
	}
	for (int i = 0; i < 10; i++)
	{
		printf("%d ", a[i]);
	}
}